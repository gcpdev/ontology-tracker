og:classes-have-instances
   a og:Guideline ;
# subclasses provide a grouping of guidelines
   a og:ClassStructureGuideline;
   og:exclusiveoption "true" ;
   og:question "Should all classes have instances?" ;
   og:option og:chi1 ;
   og:option og:chi2 .

og:chi1
        a og:Option ;
        og:answer "yes" ;
        og:shacl [
          og-shape:NoEmptyClasses
            a sh:Shape ;
            sh:targetClass owl:Class ;
              sh:sparql [
                  sh:message "All classes should have instances." ;
                  sh:severity sh:Warning ;
                  sh:select """
                      PREFIX owl: <http://www.w3.org/2002/07/owl#>
                      PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
                      SELECT DISTINCT $this
                      WHERE {

                      }""" ;
          ] .
        ] .

og:chi2
        a og:Option ;
        og:answer "no" ;
        og:shacl [] .


og:top-level-classes
   a og:Guideline ;
# subclasses provide a grouping of guidelines
   a og:ClassStructureGuideline;
   og:exclusiveoption "true" ;
   og:question "Are top-level classes fixed?" ;
   og:option og:tlc1 ;
   og:option og:tlc2 .

   og:tlc1
           a og:Option ;
           og:answer "no" ;
           og:shacl [] .

   og:tlc2
           a og:Option ;
           og:answer og:textbox;
           og:shacl [<this SHACL test should use the value of og:textbox>] .

og:classes-without-subclasses
  a og:Guideline ;
# subclasses provide a grouping of guidelines
  a og:ClassStructureGuideline;
  og:exclusiveoption "true" ;
  og:question "Are there classes that cannot have subclasses?" ;
  og:option og:cws1 ;
  og:option og:cws2 .

  og:cws1
          a og:Option ;
          og:answer "no" ;
          og:shacl [] .

  og:cws2
          a og:Option ;
          og:answer og:textbox;
          og:shacl [<this SHACL test should use the value of og:textbox>] .

og:poly-hierarchical-classes
  a og:Guideline ;
# subclasses provide a grouping of guidelines
  a og:ClassStructureGuideline;
  og:exclusiveoption "true" ;
  og:question "Must classes have only one superclass?" ;
  og:option og:phc1 ;
  og:option og:phc2 .

  og:phc1
          a og:Option ;
          og:answer "yes" ;
          og:shacl [
            dbo-shape:ClassShape
              a sh:Shape ;
              sh:targetClass owl:Class ;
              sh:targetSubjectsOf rdfs:subClassOf ;
              sh:severity sh:Error ;
              sh:property [
                sh:message "Each owl:Class should have at most one superclass" ;
                sh:path rdfs:subClassOf ;
                sh:maxCount 1;
              ] .
          ] .

  og:phc2
          a og:Option ;
          og:answer "no";
          og:shacl [] .


og:enforce-naming-convention
  a og:Guideline ;
# subclasses provide a grouping of guidelines
  a og:ClassStructureGuideline;
  og:exclusiveoption "true" ;
  og:question "Should the ontology enforce a naming convention, i.e., camel toe case with upper-case for classes and lower-case for properties names?" ;
  og:option og:enc1 ;
  og:option og:enc2 .

  og:enc1
          a og:Option ;
          og:answer "yes" ;
          og:shacl [] .

  og:enc2
          a og:Option ;
          og:answer "no";
          og:shacl [] .


og:poly-hierarchical-properties
  a og:Guideline ;
# subclasses provide a grouping of guidelines
  a og:PropertyStructureGuideline;
  og:exclusiveoption "true" ;
  og:question "Must properties have only one superproperty?" ;
  og:option og:php1 ;
  og:option og:php2 .

  og:php1
          a og:Option ;
          og:answer "yes" ;
          og:shacl [
            dbo-shape:ClassShape
              a sh:Shape ;
              sh:targetClass rdf:Property ;
              sh:targetClass owl:DatatypeProperty ;
              sh:targetClass owl:ObjectProperty ;
              sh:targetSubjectsOf rdfs:subPropertyOf ;
              sh:property [
                sh:message "Each property should have at most one super property" ;
                sh:path rdfs:subPropertyOf ;
                sh:maxCount 1;
              ] .
          ] .

  og:phc2
          a og:Option ;
          og:answer "no";
          og:shacl [] .

og:restrict-complex-properties
  a og:Guideline ;
# subclasses provide a grouping of guidelines
  a og:PropertyStructureGuideline;
  og:exclusiveoption "true" ;
  og:question "If rdfs:domain and range exist, properties must not have complex values, i.e. only one class from dbo:namespace?" ;
  og:option og:rcp1 ;
  og:option og:rcp2 .

  og:rcp1
          a og:Option ;
          og:answer "yes" ;
          og:shacl [
            dbo-shape:ClassShape
              a sh:Shape ;
              sh:targetClass rdf:Property ;
              sh:targetClass owl:DatatypeProperty ;
              sh:targetClass owl:ObjectProperty ;
              sh:targetSubjectsOf rdfs:subPropertyOf ;
              sh:property [
                sh:message "Each property should have at most one rdfs:domain" ;
                sh:path rdfs:domain ;
                sh:maxCount 1;
              ] ;
              sh:property [
                sh:message "Each property should have at most one rdfs:range" ;
                sh:path rdfs:range ;
                sh:maxCount 1;
              ] ;
          ] .

  og:rcp2
          a og:Option ;
          og:answer "no";
          og:shacl [] .



og:require-domain-range
  a og:Guideline ;
# subclasses provide a grouping of guidelines
  a og:PropertyStructureGuideline;
  og:exclusiveoption "true" ;
  og:question "Properties should/must have at least one rdfs:domain and rdfs:range (no missing values)?" ;
  og:option og:rdr1 ;
  og:option og:rdr2 .

  og:rdr1
          a og:Option ;
          og:answer "should" ;
          og:shacl [
            dbo-shape:ClassShape
              a sh:Shape ;
              sh:severity sh:Warning ;
              sh:targetClass rdf:Property ;
              sh:targetClass owl:DatatypeProperty ;
              sh:targetClass owl:ObjectProperty ;
              sh:targetSubjectsOf rdfs:subPropertyOf ;
              sh:property [
                sh:message "Each property should have an rdfs:domain that is defined as an owl:Class" ;
                sh:path rdfs:domain ;
                sh:class owl:Class;
              ] ;
              sh:property [
                sh:message "Each property should have an rdfs:range that is defined as an owl:Class" ;
                sh:path rdfs:range ;
                sh:class owl:Class;
              ] ;
          ] .

  og:rdr2
          a og:Option ;
          og:answer "must";
          og:shacl [
            dbo-shape:ClassShape
              a sh:Shape ;
              sh:severity sh:Error ;
              sh:targetClass rdf:Property ;
              sh:targetClass owl:DatatypeProperty ;
              sh:targetClass owl:ObjectProperty ;
              sh:targetSubjectsOf rdfs:subPropertyOf ;
              sh:property [
                sh:message "Each property should have an rdfs:domain that is defined as an owl:Class" ;
                sh:path rdfs:domain ;
                sh:class owl:Class;
              ] ;
              sh:property [
                sh:message "Each property should have an rdfs:range that is defined as an owl:Class" ;
                sh:path rdfs:range ;
                sh:class owl:Class;
              ] ;
          ] .


og:require-label-comment
  a og:Guideline ;
# subclasses provide a grouping of guidelines
  a og:LabelAndCommentPolicyAndMultilingualityGuideline;
  og:exclusiveoption "true" ;
  og:question "Should/must each class and property have at least one English label and comment?" ;
  og:option og:rlc1 ;
  og:option og:rlc2 .

  og:rlc1
          a og:Option ;
          og:answer "should" ;
          og:shacl [
            dbo-shape:ClassShape
              a sh:Shape ;
              sh:severity sh:Warning ;
              sh:targetClass rdf:Property ;
              sh:targetClass owl:DatatypeProperty ;
              sh:targetClass owl:ObjectProperty ;
              sh:targetSubjectsOf rdfs:subPropertyOf ;
              sh:property [
                sh:message "Each property should have an rdfs:domain that is defined as an owl:Class" ;
                sh:path rdfs:domain ;
                sh:class owl:Class;
              ] ;
              sh:property [
                sh:message "Each property should have an rdfs:range that is defined as an owl:Class" ;
                sh:path rdfs:range ;
                sh:class owl:Class;
              ] ;
          ] .

  og:rlc2
          a og:Option ;
          og:answer "must";
          og:shacl [
            dbo-shape:ClassShape
              a sh:Shape ;
              sh:severity sh:Error ;
              sh:targetClass rdf:Property ;
              sh:targetClass owl:DatatypeProperty ;
              sh:targetClass owl:ObjectProperty ;
              sh:targetSubjectsOf rdfs:subPropertyOf ;
              sh:property [
                sh:message "Each property should have an rdfs:domain that is defined as an owl:Class" ;
                sh:path rdfs:domain ;
                sh:class owl:Class;
              ] ;
              sh:property [
                sh:message "Each property should have an rdfs:range that is defined as an owl:Class" ;
                sh:path rdfs:range ;
                sh:class owl:Class;
              ] ;
          ] .
